1교시 - 주간 안내

1. 31일 14:00 취업특강
2. 1:1 취업상담 6/12부터
	자소서
3. 과정평가

java - 상속, 오버라이드

4교시 - 과정형평가

프로그래밍 언어 응용

[컴파일러와 인터프리터]
고급언어로 작성한 소스코드의 경우 컴퓨터가 이해할 수 없으므로
컴파일러나 인터프리터를 이용하여 컴퓨터가 이해하고 실행할 수 있는 기계어 코드로 번역을 수행
[컴파일러 인터프리터 차이점]
컴파일 방식의 경우 실행속도가 빠르고 보안적인 측면에서 유리한 장점이 있으나
매번 빌드작업을 거쳐야 하는 불편함이 존재 (ex - java, c, c++ 등)
인터프리터 - 코드 수정 후 즉시 실행 가능, 문장단위 (ex - 파이썬, js 등)

[빌드방식에 따른 분류체계]
컴파일 언어 - 소스코드를 컴파일러를 통해 실행 가능한 형태의 기계어로 밀 ㅣ번역하는 과정이 필요하며
	실행필요한 정보가 미리 계산되어 구동하는 시간은 오래걸리지만 실행속도가 빠르다
인터프리터 언어 - 별도의 컴파일 과정 없이 바로 실행 가능, 코드를 하나씩 번역하여 속도는 느림
바이트코드 언어 - 컴파일을 통해 고급 언어를 중간 언어로 변환 후 가상머신(JVM)에 의해 번역을 실행하는 방식
	여러 환경에서 사용 가능한 장점

[코드 인스펙션]
프로그램 소스코드를 실행하지 않고 코드상에서의 잠재적인 오류와 표준 미준수 등
결함을 사전에 식별하여 개선하는 공식적인 리뷰 기법
검토회의!

[코드리뷰 기법 비교]
동료검토(Peer Review) - 별도 절차 없이 *비공식*으로 임의로, 동료와 코드 및 산출물의 결함 식별하는 기법
워크스루! (Walk Through) - 개발자가 리뷰의 주제와 시간을 정해서 발표, 동료들의 피드백, 사례에 대한 정보공유나 아이디어 수집을 위해 사용될 수 있다;
Inspection - 역할과 절차, 체크리스트를 기준으로 결함을 식별하는 공식적인 리뷰 기법

[리팩토링]
sw의 원래 기능은 유지, 소스코드 내부 구조를 수정 및 보완하여
가독성, 성능향싱 및 로직 개선하는 기법

[OWASP TOP 10]
웹 애플리케이션에 대한 보안 프로젝트
웹앱 취약점 중 빈도가 많이 발생하고 보안상 영향을 크게 줄 수 있는 10가지를 선정
10가지 다외워라..하지만
injection!
cross site scripting!

[정적 분석]

[디자인 패턴]
생성 패턴
	싱글톤!
구조 패턴
행위 패턴

[주요 OSS 라이선스 유형]
GNU GPL 2.0 - 너도 나도 공개, 배포 할 경우 저작권
GNU Lesser GPL 2.1
Berkely Software Distribution License
Appache Licens
MIT Lisense

[빌드 도구 비교]
Ant
Maven
Gradle

mvn clean install